#!/usr/bin/env python3

import click
import json
import sys


verbose = False


@click.group()
def main():
    """
    Anchore policy bundle management utility
    """
    pass


@main.command()
@click.option(
        '--compliance', '-c',
        help="path to compliance report JSON file",
)
@click.option(
        '--gates', '-g',
        help="path to gates report CSV file",
)
@click.option(
        '--security', '-s',
        help="path to security (CVEs) report CSV file",
)
@click.option(
        '--bundle-dir', '-b',
        help='path to policy bundle component directory',
)
def allow_from_eval(compliance, gates, security, bundle_dir):
    """
    Generates an allowlist from eval output files
    """
#    print(f'generating allowlist in {bundle_dir}')
#    print(f'compliance report: {compliance_file}')
#    print(f'gates report: {gates_file}')
#    print(f'security (CVEs) report: {cve_file}')
    allowlist = allow_from_eval(compliance, gates, security, bundle_dir)

    # allowlist filename based on container image name
    #allowlist_name = container_image.replace('/','-')
    allowlist_name = 'demo'
    allowlist_file = bundle_dir + '/whitelists/' + allowlist_name + '.json'
    try:
        with open(allowlist_file, "w") as w_file:
            allowlist_json = {
                "comment": allowlist_name + " allowlist",
                "id": allowlist_name + "Allowlist",
                "items": allowlist,
                "name": allowlist_name + " Allowlist",
                "version": "1_0"
            }
            w_file.write(json.dumps(allowlist_json))
            w_file.close()
            print(f'wrote {allowlist_file}')
            if verbose:
                for item in allowlist:
                    print(item)
    except:
        e = sys.exc_info()[0]
        print(e)


if __name__ == "__main__":
    main(auto_envvar_prefix='ANCHORE_BUNDLE')
